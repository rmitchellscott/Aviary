
FROM --platform=$BUILDPLATFORM golang:1.24-alpine AS rmapi-builder
WORKDIR /app
RUN apk add --no-cache git
ARG TARGETPLATFORM
RUN case "$TARGETPLATFORM" in \
        'linux/arm/v6') export GOARCH=arm GOARM=6 ;; \
        'linux/arm/v7') export GOARCH=arm GOARM=7 ;; \
        'linux/arm64') export GOARCH=arm64 ;; \
        *) export GOARCH=amd64 ;; \
    esac && \
    git clone https://github.com/ddvk/rmapi && \
    cd rmapi && \
    go build -ldflags='-w -s' .


FROM --platform=${BUILDPLATFORM:-linux/amd64} golang:1.24-alpine AS aviary-builder

WORKDIR /src/aviary-backend

COPY go.mod go.sum ./
RUN apk add --no-cache git \
 && go mod download

COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -o /out/aviary-server cmd/server/main.go

FROM alpine:3.21 AS runner

# Install runtime dependencies
RUN apk add --no-cache \
      ca-certificates \
      ghostscript \
    && update-ca-certificates

WORKDIR /app

COPY --from=rmapi-builder /app/rmapi/rmapi /usr/local/bin/rmapi
COPY --from=aviary-builder /out/aviary-server /usr/local/bin/aviary-server

ENV PORT=8000 \
    PDF_DIR=/app/pdfs \
    RM_TARGET_DIR=/ \
    GS_COMPAT=1.4 \
    GS_SETTINGS=/ebook

ENTRYPOINT ["/usr/local/bin/aviary-server"]
